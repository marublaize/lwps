name: PyPi Build/Scan/Push

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      LW_ACCESS_TOKEN: ${{ secrets.LW_ACCESS_TOKEN }}
      LW_ACCOUNT_NAME: ${{ secrets.LW_ACCOUNT_NAME }}
      LW_SCANNER_SAVE_RESULTS: true
      LW_SCANNER_SCAN_LIBRARY_PACKAGES: true
      DOCKER_REPO: laceworkps/laceworkreports
      DOCKER_TEST_NAME: laceworkps/laceworkreports
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: make poetry-download

      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}

      - name: Publish
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry publish --build || echo "Done"
        continue-on-error: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Collect Docker Metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_REPO }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Export to Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          tags: ${{ env.DOCKER_TEST_NAME }}

      - name: Download Lacework Scanner
        run: |
          curl -LJO https://github.com/lacework/lacework-vulnerability-scanner/releases/latest/download/lw-scanner-linux-amd64
          sudo mv lw-scanner-linux-amd64 lw-scanner
          sudo chmod +x lw-scanner
        continue-on-error: true

      - name: Lacework Image Assurance Scan
        run: |
          ./lw-scanner image evaluate ${DOCKER_TEST_NAME} latest --build-id ${{ github.run_id }}
        continue-on-error: true

      - name: Build and Publish to Docker
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
